let assert = chai.assert;
describe("TestoviParser", function () {
    describe("dajTacnost()", function () {
        it("Should return 100% and no errors if all tests pass", function () {
            let rezultat = TestoviParser.dajTacnost("{\n    \"stats\": {\n      \"suites\": 2,\n      \"tests\": 5,\n      \"passes\": 5,\n      \"pending\": 0,\n      \"failures\": 0,\n      \"start\": \"2021-11-26T22:22:14.884Z\",\n      \"end\": \"2021-11-26T22:22:14.892Z\",\n      \"duration\": 8\n    },\n    \"tests\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      }\n    ],\n    \"pending\": [],\n    \"failures\": [],\n    \"passes\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      }\n    ]\n}");
            assert.equal(rezultat.tacnost, "100%", "Svi testovi su prosli");
            assert.equal(rezultat.greske.length, 0, "Nije bilo gresaka");
        });
        it("Should return 0% and 5 errors if no tests pass", function () {
            let rezultat = TestoviParser.dajTacnost("{\n    \"stats\": {\n      \"suites\": 2,\n      \"tests\": 5,\n      \"passes\": 0,\n      \"pending\": 0,\n      \"failures\": 5,\n      \"start\": \"2021-11-26T22:24:22.147Z\",\n      \"end\": \"2021-11-26T22:24:22.161Z\",\n      \"duration\": 14\n    },\n    \"tests\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 3: expected 1 to equal 3\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"3\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 3: expected 1 to equal 3\\n    at Context.<anonymous> (public\/js\/testovi.js:9:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 4: expected 1 to equal 4\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"4\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 4: expected 1 to equal 4\\n    at Context.<anonymous> (public\/js\/testovi.js:16:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 5: expected 1 to equal 5\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"5\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 5: expected 1 to equal 5\\n    at Context.<anonymous> (public\/js\/testovi.js:23:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:30:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:43:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      }\n    ],\n    \"pending\": [],\n    \"failures\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 3: expected 1 to equal 3\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"3\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 3: expected 1 to equal 3\\n    at Context.<anonymous> (public\/js\/testovi.js:9:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 4: expected 1 to equal 4\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"4\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 4: expected 1 to equal 4\\n    at Context.<anonymous> (public\/js\/testovi.js:16:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 5: expected 1 to equal 5\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"5\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 5: expected 1 to equal 5\\n    at Context.<anonymous> (public\/js\/testovi.js:23:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:30:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:43:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      }\n    ],\n    \"passes\": []\n}");
            assert.equal(rezultat.tacnost, "0%", "Nijedan test nije prosao");
            assert.equal(rezultat.greske.length, 5, "Treba biti 5 gresaka");
        });
        it("Should return 20% and 1 errors if one test passes", function () {
            let rezultat = TestoviParser.dajTacnost("{\n    \"stats\": {\n      \"suites\": 2,\n      \"tests\": 5,\n      \"passes\": 1,\n      \"pending\": 0,\n      \"failures\": 4,\n      \"start\": \"2021-11-26T22:26:24.442Z\",\n      \"end\": \"2021-11-26T22:26:24.452Z\",\n      \"duration\": 10\n    },\n    \"tests\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 4: expected 1 to equal 4\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"4\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 4: expected 1 to equal 4\\n    at Context.<anonymous> (public\/js\/testovi.js:16:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 5: expected 1 to equal 5\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"5\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 5: expected 1 to equal 5\\n    at Context.<anonymous> (public\/js\/testovi.js:23:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:30:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:43:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      }\n    ],\n    \"pending\": [],\n    \"failures\": [\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 4: expected 1 to equal 4\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"4\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 4: expected 1 to equal 4\\n    at Context.<anonymous> (public\/js\/testovi.js:16:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 5: expected 1 to equal 5\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"5\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 5: expected 1 to equal 5\\n    at Context.<anonymous> (public\/js\/testovi.js:23:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:30:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:43:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      }\n    ],\n    \"passes\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      }\n    ]\n}");
            assert.equal(rezultat.tacnost, "20%", "Jedan test je prosao");
            assert.equal(rezultat.greske.length, 4, "Trebaju biti 4 greske");
        });
        it("Should return 60% and 2 errors if three tests pass", function () {
            let rezultat = TestoviParser.dajTacnost("{\n    \"stats\": {\n      \"suites\": 2,\n      \"tests\": 5,\n      \"passes\": 3,\n      \"pending\": 0,\n      \"failures\": 2,\n      \"start\": \"2021-11-26T22:27:09.654Z\",\n      \"end\": \"2021-11-26T22:27:09.665Z\",\n      \"duration\": 11\n    },\n    \"tests\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 4: expected 1 to equal 4\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"4\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 4: expected 1 to equal 4\\n    at Context.<anonymous> (public\/js\/testovi.js:16:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:43:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      }\n    ],\n    \"pending\": [],\n    \"failures\": [\n      {\n        \"title\": \"should draw 4 rows when parameter are 3,4\",\n        \"fullTitle\": \"Tabela crtaj() should draw 4 rows when parameter are 3,4\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"message\": \"Broj redova treba biti 4: expected 1 to equal 4\",\n          \"showDiff\": true,\n          \"actual\": \"1\",\n          \"expected\": \"4\",\n          \"operator\": \"strictEqual\",\n          \"stack\": \"AssertionError: Broj redova treba biti 4: expected 1 to equal 4\\n    at Context.<anonymous> (public\/js\/testovi.js:16:20)\"\n        }\n      },\n      {\n        \"title\": \"should draw 3 columns in row 3 when parameter are 5,6\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 columns in row 3 when parameter are 5,6\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"err\": {\n          \"stack\": \"TypeError: Cannot read properties of undefined (reading 'getElementsByTagName')\\n    at Context.<anonymous> (public\/js\/testovi.js:43:36)\",\n          \"message\": \"Cannot read properties of undefined (reading 'getElementsByTagName')\"\n        }\n      }\n    ],\n    \"passes\": [\n      {\n        \"title\": \"should draw 3 rows when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 3 rows when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 1,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 5 rows when parameter are 4,5\",\n        \"fullTitle\": \"Tabela crtaj() should draw 5 rows when parameter are 4,5\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      },\n      {\n        \"title\": \"should draw 2 columns in row 2 when parameter are 2,3\",\n        \"fullTitle\": \"Tabela crtaj() should draw 2 columns in row 2 when parameter are 2,3\",\n        \"file\": null,\n        \"duration\": 0,\n        \"currentRetry\": 0,\n        \"speed\": \"fast\",\n        \"err\": {}\n      }\n    ]\n}");
            assert.equal(rezultat.tacnost, "60%", "Tri testa su prosla");
            assert.equal(rezultat.greske.length, 2, "Trebaju biti 2 greske");
        });
        it("Should return 0% and 1 errors if recieves wrong format", function () {
            let rezultat = TestoviParser.dajTacnost("{\n    \"status\":[\n        \"tricked\",\n        \"backstabbed\",\n        \"quite possibly, bamboozled\"\n    ]\n}");
            assert.equal(rezultat.tacnost, "0%", "Pogresan format testova");
            assert.equal(rezultat.greske.length, 1, "Treba vratiti 1 error");
            assert.equal(rezultat.greske[0], "Testovi se ne mogu izvršiti", "Testovi se ne mogu izvrsiti")
        });
    
    });
});
